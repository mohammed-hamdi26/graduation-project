import { Poppins, Cairo } from "next/font/google";

const poppins = Poppins({
  weight: ["100", "200", "300", "400", "500", "600", "700", "800", "900"],
  subsets: ["latin"],
  display: "swap",
});

const cairo = Cairo({
  weight: ["200", "300", "400", "500", "600", "700", "800", "900"],
  subsets: ["arabic", "latin"],
  display: "swap",
});
import "@/app/_styles/globals.css";
import { Toaster } from "react-hot-toast";
import { PredictProvider } from "../_context/predictContext";
import { hasLocale, NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages } from "next-intl/server";
import { routing } from "@/i18n/routing";
import { notFound } from "next/navigation";

export const metadata = {
  title: {
    template: "%s | medical hospital",
    default: "welcome | medical hospital",
  },
  description: "Generated by create next app",
};

export default async function RootLayout({ children, params }) {
  const messages = await getMessages();
  // const locale = await getLocale();
  // const poppinsClass = poppins.className;
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }
  return (
    <NextIntlClientProvider messages={messages}>
      <html
        lang="en"
        dir={`${locale === "ar" ? "rtl" : "ltr"}`}
        suppressHydrationWarning={false}
      >
        <body
          suppressHydrationWarning={false}
          data-new-gr-c-s-check-loaded="14.1226.0"
          data-gr-ext-installed=""
          className={`vsc-initialized ${
            locale === "en" ? poppins.className : cairo.className
          } bg-background`} // ${poppinsClass}
        >
          <Toaster position="top-center" />
          <div className="flex flex-col h-dvh">
            <PredictProvider>
              <main className="flex-1 h-full  ">{children}</main>
            </PredictProvider>
          </div>
        </body>
      </html>
    </NextIntlClientProvider>
  );
}
